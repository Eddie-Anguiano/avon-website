// Background Images
@mixin img-bg(
  $img-path,
  $overlay: transparent,
  $opacity: 0,
  $bg-pos: center,
  $bg-repeat: no-repeat,
  $bg-size: cover
) {
  background: linear-gradient(
      transparentize($overlay, $opacity),
      transparentize($overlay, $opacity)
    ),
    url(#{$img-path});
  background-size: $bg-size;
  background-position: $bg-pos;
  background-repeat: $bg-repeat;
}

/*-------------------------------*/
/*MEDIA QUERIES*/
/*-------------------------------*/

// Mobile first
@mixin m1-mq($break) {
  @if $break == 'small' {
    @media (min-width: $breakpoint-sm) and (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $break == 'medium' {
    @media (min-width: $breakpoint-md + 1) {
      @content;
    }
  } @else if $break == 'large' {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else {
    @error "No value could be retrieced for '#{$break}'";
  }
}

// Desktop first
@mixin d1-mq($break) {
  @if $break == 'large' {
    @media (max-width: $breakpoint-lg) and (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $break == 'large-keep' {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $break == 'medium' {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  }
}

//Grid area names
@mixin grid-areas($element) {
  .#{$element}__left {
    grid-area: #{$element}-left;
  }

  .#{$element}__content {
    grid-area: $element;
  }

  .#{$element}__right {
    grid-area: #{$element}-right;
  }
}
